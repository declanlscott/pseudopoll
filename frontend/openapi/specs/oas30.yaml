openapi: "3.0.1"
info:
  title: "pseudopoll-rest-api"
  version: "2023-11-28T01:49:57Z"
servers:
- url: "https://api.pseudopoll.com"
paths:
  /polls/{pollId}:
    get:
      parameters:
      - name: "pollId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Poll"
        "403":
          description: "403 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      security:
      - pseudopoll-authorizer: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:981543223421:function:pseudopoll-get-poll/invocations"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
    delete:
      parameters:
      - name: "pollId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "204":
          description: "204 response"
          content: {}
      security:
      - pseudopoll-authorizer: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:981543223421:function:pseudopoll-archive-poll/invocations"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
  /polls:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePoll"
        required: true
      responses:
        "400":
          description: "400 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "201":
          description: "201 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Poll"
      security:
      - pseudopoll-authorizer: []
      x-amazon-apigateway-request-validator: "create-poll-validator"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:981543223421:function:pseudopoll-create-poll/invocations"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
  /public/polls/{pollId}:
    get:
      parameters:
      - name: "pollId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Poll"
        "500":
          description: "500 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "401 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: "403 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:981543223421:function:pseudopoll-get-poll/invocations"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
components:
  schemas:
    CreatePoll:
      title: "Create Poll Schema"
      required:
      - "duration"
      - "options"
      - "prompt"
      type: "object"
      properties:
        duration:
          maximum: 604800
          minimum: 60
          type: "integer"
          description: "The duration of the poll in seconds"
        options:
          maxItems: 10
          minItems: 2
          uniqueItems: true
          type: "array"
          description: "The options to vote on"
          items:
            maxLength: 140
            minLength: 1
            type: "string"
        prompt:
          maxLength: 280
          minLength: 1
          type: "string"
          description: "The poll prompt"
    Error:
      title: "Error schema"
      required:
      - "message"
      type: "object"
      properties:
        message:
          type: "string"
          description: "The error message"
        cause:
          type: "string"
          description: "The cause of the error"
    Poll:
      title: "Poll Schema"
      required:
      - "archived"
      - "createdAt"
      - "duration"
      - "options"
      - "pollId"
      - "prompt"
      - "userId"
      type: "object"
      properties:
        pollId:
          maxLength: 12
          minLength: 12
          type: "string"
        userId:
          type: "string"
        prompt:
          maxLength: 280
          minLength: 1
          type: "string"
          description: "The poll prompt text"
        options:
          maxItems: 10
          minItems: 2
          uniqueItems: true
          type: "array"
          description: "The options to vote on"
          items:
            required:
            - "optionId"
            - "pollId"
            - "text"
            - "updatedAt"
            - "votes"
            type: "object"
            properties:
              optionId:
                maxLength: 12
                minLength: 12
                type: "string"
              pollId:
                maxLength: 12
                minLength: 12
                type: "string"
              text:
                maxLength: 140
                minLength: 1
                type: "string"
                description: "The option text"
              updatedAt:
                type: "string"
                description: "The time of the last vote on this option"
              votes:
                minimum: 0
                type: "integer"
                description: "The number of votes for this option"
        createdAt:
          type: "string"
          description: "The time the poll was created"
        duration:
          maximum: 604800
          minimum: 60
          type: "integer"
          description: "The duration of the poll in seconds"
        archived:
          type: "boolean"
          description: "Whether the poll is archived"
  securitySchemes:
    pseudopoll-authorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
      x-amazon-apigateway-authorizer:
        type: "token"
        authorizerUri: "arn:aws:apigateway:us-east-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-2:981543223421:function:pseudopoll-authorizer/invocations"
        authorizerCredentials: "arn:aws:iam::981543223421:role/api_gateway_authorizer_invocation_role"
        authorizerResultTtlInSeconds: 300
x-amazon-apigateway-gateway-responses:
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS'"
      gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS'"
      gatewayresponse.header.Access-Control-Allow-Credentials: "'true'"
      gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
      gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
x-amazon-apigateway-request-validators:
  create-poll-validator:
    validateRequestParameters: false
    validateRequestBody: true
