${jsonencode({
  "Comment": "Poll manager workflow",
  "StartAt": "Method",
  "States": {
    "Method": {
      "Choices": [
        {
          "Next": "Generate pollId",
          "StringEquals": "POST",
          "Variable": "$.method"
        },
        {
          "Next": "DELETE",
          "StringEquals": "DELETE",
          "Variable": "$.method"
        }
      ],
      "Default": "FAIL",
      "Type": "Choice"
    },
    "Generate pollId": {
      "Next": "Write poll",
      "Parameters": {
        "value.$": "States.UUID()"
      },
      "ResultPath": "$.pollId",
      "Type": "Pass"
    },
    "Write poll": {
      "Type": "Task",
      "Resource": "arn:aws:states:::dynamodb:updateItem",
      "Parameters": {
        "TableName": "${pollsTable}",
        "Key": {
          "PollId": {
            "S.$": "$.pollId.value"
          }
        },
        "UpdateExpression": "SET #userId = :userId, #prompt = :prompt, #options = :options, #createdAt = :createdAt, #duration = :duration",
        "ExpressionAttributeNames": {
          "#userId": "UserId",
          "#prompt": "Prompt",
          "#options": "Options",
          "#createdAt": "CreatedAt",
          "#duration": "Duration"
        },
        "ExpressionAttributeValues": {
          ":userId": {
            "S.$": "$.userId"
          },
          ":prompt": {
            "S.$": "$.prompt"
          },
          ":options": {
            "SS.$": "$.options"
          },
          ":createdAt": {
            "S.$": "$$.Execution.StartTime"
          },
          ":duration": {
            "N.$": "$.duration"
          }
        },
        "ReturnValues": "ALL_NEW"
      },
      "Next": "Write poll options",
      "ResultPath": "$.pollOutput",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "BackoffRate": 2,
          "IntervalSeconds": 1,
          "MaxAttempts": 3
        }
      ]
    },
    "Write poll options": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Write poll option",
        "States": {
          "Write poll option": {
            "Type": "Task",
            "Resource": "arn:aws:states:::dynamodb:updateItem",
            "Parameters": {
              "TableName": "${optionsTable}",
              "Key": {
                "OptionId": {
                  "S.$": "States.UUID()"
                }
              },
              "UpdateExpression": "SET #pollId = :pollId, #text = :text, #updatedAt = :updatedAt, #votes = :votes",
              "ExpressionAttributeNames": {
                "#pollId": "PollId",
                "#text": "Text",
                "#updatedAt": "UpdatedAt",
                "#votes": "Votes"
              },
              "ExpressionAttributeValues": {
                ":pollId": {
                  "S.$": "$.pollId"
                },
                ":text": {
                  "S.$": "$.text"
                },
                ":updatedAt": {
                  "S.$": "$$.Execution.StartTime"
                },
                ":votes": {
                  "N": "0"
                }
              },
              "ReturnValues": "ALL_NEW"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "States.ALL"
                ],
                "BackoffRate": 2,
                "IntervalSeconds": 1,
                "MaxAttempts": 3
              }
            ],
            "End": true
          }
        }
      },
      "ItemsPath": "$.options",
      "Next": "Poll created",
      "Parameters": {
        "pollId.$": "$.pollId.value",
        "text.$": "$$.Map.Item.Value"
      },
      "ResultPath": "$.optionsOutput"
    },
    "Poll created": {
      "Type": "Succeed"
    },
    "DELETE": {
      "Type": "Succeed"
    },
    "FAIL": {
      "Type": "Fail"
    }
  }
})}
